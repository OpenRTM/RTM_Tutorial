# Python stubs generated by omniidl from C:\workspace\openrtmpy1\OpenRTM_aist\RTM_IDL\SharedMemory.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "DataPort_OpenRTM.idl"
import DataPort_OpenRTM_idl
_0_OpenRTM = omniORB.openModule("OpenRTM")
_0_OpenRTM__POA = omniORB.openModule("OpenRTM__POA")

#
# Start of module "OpenRTM"
#
__name__ = "OpenRTM"
_0_OpenRTM = omniORB.openModule("OpenRTM", r"C:\workspace\openrtmpy1\OpenRTM_aist\RTM_IDL\SharedMemory.idl")
_0_OpenRTM__POA = omniORB.openModule("OpenRTM__POA", r"C:\workspace\openrtmpy1\OpenRTM_aist\RTM_IDL\SharedMemory.idl")


# interface PortSharedMemory
_0_OpenRTM._d_PortSharedMemory = (omniORB.tcInternal.tv_objref, "IDL:OpenRTM/PortSharedMemory:1.0", "PortSharedMemory")
omniORB.typeMapping["IDL:OpenRTM/PortSharedMemory:1.0"] = _0_OpenRTM._d_PortSharedMemory
_0_OpenRTM.PortSharedMemory = omniORB.newEmptyClass()
class PortSharedMemory :
    _NP_RepositoryId = _0_OpenRTM._d_PortSharedMemory[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenRTM.PortSharedMemory = PortSharedMemory
_0_OpenRTM._tc_PortSharedMemory = omniORB.tcInternal.createTypeCode(_0_OpenRTM._d_PortSharedMemory)
omniORB.registerType(PortSharedMemory._NP_RepositoryId, _0_OpenRTM._d_PortSharedMemory, _0_OpenRTM._tc_PortSharedMemory)

# PortSharedMemory operations and attributes
PortSharedMemory._d_open_memory = ((omniORB.tcInternal.tv_ulonglong, (omniORB.tcInternal.tv_string,0)), (), None)
PortSharedMemory._d_create_memory = ((omniORB.tcInternal.tv_ulonglong, (omniORB.tcInternal.tv_string,0)), (), None)
PortSharedMemory._d_close_memory = ((omniORB.tcInternal.tv_boolean, ), (), None)
PortSharedMemory._d_setInterface = ((omniORB.typeMapping["IDL:OpenRTM/PortSharedMemory:1.0"], ), (), None)
PortSharedMemory._d_setEndian = ((omniORB.tcInternal.tv_boolean, ), (), None)
PortSharedMemory._d_put = ((), (omniORB.typeMapping["IDL:OpenRTM/PortStatus:1.0"], ), None)
PortSharedMemory._d_get = ((), (omniORB.typeMapping["IDL:OpenRTM/PortStatus:1.0"], ), None)

# PortSharedMemory object reference
class _objref_PortSharedMemory (CORBA.Object):
    _NP_RepositoryId = PortSharedMemory._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def open_memory(self, *args):
        return self._obj.invoke("open_memory", _0_OpenRTM.PortSharedMemory._d_open_memory, args)

    def create_memory(self, *args):
        return self._obj.invoke("create_memory", _0_OpenRTM.PortSharedMemory._d_create_memory, args)

    def close_memory(self, *args):
        return self._obj.invoke("close_memory", _0_OpenRTM.PortSharedMemory._d_close_memory, args)

    def setInterface(self, *args):
        return self._obj.invoke("setInterface", _0_OpenRTM.PortSharedMemory._d_setInterface, args)

    def setEndian(self, *args):
        return self._obj.invoke("setEndian", _0_OpenRTM.PortSharedMemory._d_setEndian, args)

    def put(self, *args):
        return self._obj.invoke("put", _0_OpenRTM.PortSharedMemory._d_put, args)

    def get(self, *args):
        return self._obj.invoke("get", _0_OpenRTM.PortSharedMemory._d_get, args)

omniORB.registerObjref(PortSharedMemory._NP_RepositoryId, _objref_PortSharedMemory)
_0_OpenRTM._objref_PortSharedMemory = _objref_PortSharedMemory
del PortSharedMemory, _objref_PortSharedMemory

# PortSharedMemory skeleton
__name__ = "OpenRTM__POA"
class PortSharedMemory (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenRTM.PortSharedMemory._NP_RepositoryId


    _omni_op_d = {"open_memory": _0_OpenRTM.PortSharedMemory._d_open_memory, "create_memory": _0_OpenRTM.PortSharedMemory._d_create_memory, "close_memory": _0_OpenRTM.PortSharedMemory._d_close_memory, "setInterface": _0_OpenRTM.PortSharedMemory._d_setInterface, "setEndian": _0_OpenRTM.PortSharedMemory._d_setEndian, "put": _0_OpenRTM.PortSharedMemory._d_put, "get": _0_OpenRTM.PortSharedMemory._d_get}

PortSharedMemory._omni_skeleton = PortSharedMemory
_0_OpenRTM__POA.PortSharedMemory = PortSharedMemory
omniORB.registerSkeleton(PortSharedMemory._NP_RepositoryId, PortSharedMemory)
del PortSharedMemory
__name__ = "OpenRTM"

#
# End of module "OpenRTM"
#
__name__ = "SharedMemory_idl"

_exported_modules = ( "OpenRTM", )

# The end.
