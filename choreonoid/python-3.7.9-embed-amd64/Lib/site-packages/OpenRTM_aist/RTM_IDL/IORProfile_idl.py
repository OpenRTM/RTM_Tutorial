# Python stubs generated by omniidl from C:\workspace\openrtmpy1\OpenRTM_aist\RTM_IDL\IORProfile.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"C:\workspace\openrtmpy1\OpenRTM_aist\RTM_IDL\IORProfile.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"C:\workspace\openrtmpy1\OpenRTM_aist\RTM_IDL\IORProfile.idl")


# typedef ... ProfileId
class ProfileId:
    _NP_RepositoryId = "IDL:ProfileId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.ProfileId = ProfileId
_0__GlobalIDL._d_ProfileId  = omniORB.tcInternal.tv_ulong
_0__GlobalIDL._ad_ProfileId = (omniORB.tcInternal.tv_alias, ProfileId._NP_RepositoryId, "ProfileId", omniORB.tcInternal.tv_ulong)
_0__GlobalIDL._tc_ProfileId = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_ProfileId)
omniORB.registerType(ProfileId._NP_RepositoryId, _0__GlobalIDL._ad_ProfileId, _0__GlobalIDL._tc_ProfileId)
del ProfileId

# typedef ... ProfileData
class ProfileData:
    _NP_RepositoryId = "IDL:ProfileData:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.ProfileData = ProfileData
_0__GlobalIDL._d_ProfileData  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0__GlobalIDL._ad_ProfileData = (omniORB.tcInternal.tv_alias, ProfileData._NP_RepositoryId, "ProfileData", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0__GlobalIDL._tc_ProfileData = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_ProfileData)
omniORB.registerType(ProfileData._NP_RepositoryId, _0__GlobalIDL._ad_ProfileData, _0__GlobalIDL._tc_ProfileData)
del ProfileData

# struct TaggedProfile
_0__GlobalIDL.TaggedProfile = omniORB.newEmptyClass()
class TaggedProfile (omniORB.StructBase):
    _NP_RepositoryId = "IDL:TaggedProfile:1.0"

    def __init__(self, tag, profile_data):
        self.tag = tag
        self.profile_data = profile_data

_0__GlobalIDL.TaggedProfile = TaggedProfile
_0__GlobalIDL._d_TaggedProfile  = (omniORB.tcInternal.tv_struct, TaggedProfile, TaggedProfile._NP_RepositoryId, "TaggedProfile", "tag", omniORB.typeMapping["IDL:ProfileId:1.0"], "profile_data", omniORB.typeMapping["IDL:ProfileData:1.0"])
_0__GlobalIDL._tc_TaggedProfile = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_TaggedProfile)
omniORB.registerType(TaggedProfile._NP_RepositoryId, _0__GlobalIDL._d_TaggedProfile, _0__GlobalIDL._tc_TaggedProfile)
del TaggedProfile

# typedef ... TaggedProfileList
class TaggedProfileList:
    _NP_RepositoryId = "IDL:TaggedProfileList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.TaggedProfileList = TaggedProfileList
_0__GlobalIDL._d_TaggedProfileList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:TaggedProfile:1.0"], 0)
_0__GlobalIDL._ad_TaggedProfileList = (omniORB.tcInternal.tv_alias, TaggedProfileList._NP_RepositoryId, "TaggedProfileList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:TaggedProfile:1.0"], 0))
_0__GlobalIDL._tc_TaggedProfileList = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_TaggedProfileList)
omniORB.registerType(TaggedProfileList._NP_RepositoryId, _0__GlobalIDL._ad_TaggedProfileList, _0__GlobalIDL._tc_TaggedProfileList)
del TaggedProfileList

# typedef ... ComponentId
class ComponentId:
    _NP_RepositoryId = "IDL:ComponentId:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.ComponentId = ComponentId
_0__GlobalIDL._d_ComponentId  = omniORB.tcInternal.tv_ulong
_0__GlobalIDL._ad_ComponentId = (omniORB.tcInternal.tv_alias, ComponentId._NP_RepositoryId, "ComponentId", omniORB.tcInternal.tv_ulong)
_0__GlobalIDL._tc_ComponentId = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_ComponentId)
omniORB.registerType(ComponentId._NP_RepositoryId, _0__GlobalIDL._ad_ComponentId, _0__GlobalIDL._tc_ComponentId)
del ComponentId

# typedef ... ComponentData
class ComponentData:
    _NP_RepositoryId = "IDL:ComponentData:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.ComponentData = ComponentData
_0__GlobalIDL._d_ComponentData  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0__GlobalIDL._ad_ComponentData = (omniORB.tcInternal.tv_alias, ComponentData._NP_RepositoryId, "ComponentData", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0__GlobalIDL._tc_ComponentData = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_ComponentData)
omniORB.registerType(ComponentData._NP_RepositoryId, _0__GlobalIDL._ad_ComponentData, _0__GlobalIDL._tc_ComponentData)
del ComponentData

# struct TaggedComponent
_0__GlobalIDL.TaggedComponent = omniORB.newEmptyClass()
class TaggedComponent (omniORB.StructBase):
    _NP_RepositoryId = "IDL:TaggedComponent:1.0"

    def __init__(self, tag, component_data):
        self.tag = tag
        self.component_data = component_data

_0__GlobalIDL.TaggedComponent = TaggedComponent
_0__GlobalIDL._d_TaggedComponent  = (omniORB.tcInternal.tv_struct, TaggedComponent, TaggedComponent._NP_RepositoryId, "TaggedComponent", "tag", omniORB.typeMapping["IDL:ComponentId:1.0"], "component_data", omniORB.typeMapping["IDL:ComponentData:1.0"])
_0__GlobalIDL._tc_TaggedComponent = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_TaggedComponent)
omniORB.registerType(TaggedComponent._NP_RepositoryId, _0__GlobalIDL._d_TaggedComponent, _0__GlobalIDL._tc_TaggedComponent)
del TaggedComponent

# typedef ... MultipleComponentProfile
class MultipleComponentProfile:
    _NP_RepositoryId = "IDL:MultipleComponentProfile:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.MultipleComponentProfile = MultipleComponentProfile
_0__GlobalIDL._d_MultipleComponentProfile  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:TaggedComponent:1.0"], 0)
_0__GlobalIDL._ad_MultipleComponentProfile = (omniORB.tcInternal.tv_alias, MultipleComponentProfile._NP_RepositoryId, "MultipleComponentProfile", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:TaggedComponent:1.0"], 0))
_0__GlobalIDL._tc_MultipleComponentProfile = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_MultipleComponentProfile)
omniORB.registerType(MultipleComponentProfile._NP_RepositoryId, _0__GlobalIDL._ad_MultipleComponentProfile, _0__GlobalIDL._tc_MultipleComponentProfile)
del MultipleComponentProfile

# struct Version
_0__GlobalIDL.Version = omniORB.newEmptyClass()
class Version (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Version:1.0"

    def __init__(self, dummy, major, minor):
        self.dummy = dummy
        self.major = major
        self.minor = minor

_0__GlobalIDL.Version = Version
_0__GlobalIDL._d_Version  = (omniORB.tcInternal.tv_struct, Version, Version._NP_RepositoryId, "Version", "dummy", omniORB.tcInternal.tv_octet, "major", omniORB.tcInternal.tv_octet, "minor", omniORB.tcInternal.tv_octet)
_0__GlobalIDL._tc_Version = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_Version)
omniORB.registerType(Version._NP_RepositoryId, _0__GlobalIDL._d_Version, _0__GlobalIDL._tc_Version)
del Version

# struct Address
_0__GlobalIDL.Address = omniORB.newEmptyClass()
class Address (omniORB.StructBase):
    _NP_RepositoryId = "IDL:Address:1.0"

    def __init__(self, host, port):
        self.host = host
        self.port = port

_0__GlobalIDL.Address = Address
_0__GlobalIDL._d_Address  = (omniORB.tcInternal.tv_struct, Address, Address._NP_RepositoryId, "Address", "host", (omniORB.tcInternal.tv_string,0), "port", omniORB.tcInternal.tv_ushort)
_0__GlobalIDL._tc_Address = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_Address)
omniORB.registerType(Address._NP_RepositoryId, _0__GlobalIDL._d_Address, _0__GlobalIDL._tc_Address)
del Address

# typedef ... ObjectKey
class ObjectKey:
    _NP_RepositoryId = "IDL:ObjectKey:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0__GlobalIDL.ObjectKey = ObjectKey
_0__GlobalIDL._d_ObjectKey  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0__GlobalIDL._ad_ObjectKey = (omniORB.tcInternal.tv_alias, ObjectKey._NP_RepositoryId, "ObjectKey", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0__GlobalIDL._tc_ObjectKey = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._ad_ObjectKey)
omniORB.registerType(ObjectKey._NP_RepositoryId, _0__GlobalIDL._ad_ObjectKey, _0__GlobalIDL._tc_ObjectKey)
del ObjectKey

# struct ProfileBody
_0__GlobalIDL.ProfileBody = omniORB.newEmptyClass()
class ProfileBody (omniORB.StructBase):
    _NP_RepositoryId = "IDL:ProfileBody:1.0"

    def __init__(self, version_, address_, object_key, components):
        self.version_ = version_
        self.address_ = address_
        self.object_key = object_key
        self.components = components

_0__GlobalIDL.ProfileBody = ProfileBody
_0__GlobalIDL._d_ProfileBody  = (omniORB.tcInternal.tv_struct, ProfileBody, ProfileBody._NP_RepositoryId, "ProfileBody", "version_", omniORB.typeMapping["IDL:Version:1.0"], "address_", omniORB.typeMapping["IDL:Address:1.0"], "object_key", omniORB.typeMapping["IDL:ObjectKey:1.0"], "components", omniORB.typeMapping["IDL:MultipleComponentProfile:1.0"])
_0__GlobalIDL._tc_ProfileBody = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_ProfileBody)
omniORB.registerType(ProfileBody._NP_RepositoryId, _0__GlobalIDL._d_ProfileBody, _0__GlobalIDL._tc_ProfileBody)
del ProfileBody

# struct IOR
_0__GlobalIDL.IOR = omniORB.newEmptyClass()
class IOR (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IOR:1.0"

    def __init__(self, type_id, profiles):
        self.type_id = type_id
        self.profiles = profiles

_0__GlobalIDL.IOR = IOR
_0__GlobalIDL._d_IOR  = (omniORB.tcInternal.tv_struct, IOR, IOR._NP_RepositoryId, "IOR", "type_id", (omniORB.tcInternal.tv_string,0), "profiles", omniORB.typeMapping["IDL:TaggedProfileList:1.0"])
_0__GlobalIDL._tc_IOR = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_IOR)
omniORB.registerType(IOR._NP_RepositoryId, _0__GlobalIDL._d_IOR, _0__GlobalIDL._tc_IOR)
del IOR

#
# End of module "_GlobalIDL"
#
__name__ = "IORProfile_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
